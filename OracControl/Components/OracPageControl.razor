@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.Configuration
@using OracControl.Services;
@inject IOscServer server
@inject IConfiguration config
@implements IDisposable

    <div class="d-flex flex-row justify-content-between">
        <div>
            <button onclick="@(() => PageChange(PrevPageAddress))" class="ml-2 btn btn-outline-secondary @(!config.GetValue<bool>("EnableOnScreenNavigationButtons") ? "d-none" : "")" type="button">Previous</button>
        </div>
        <div class="navbar-brand">
            <p class="d-inline font-weight-light text-lowercase" style="font-size:small;">
                page
            </p>
            <p class="d-inline font-weight-bold">
                @Name
            </p>
        </div>
        <div>
            <button onclick="@(() => PageChange(NextPageAddress))" class="ml-2 btn btn-outline-secondary @(!config.GetValue<bool>("EnableOnScreenNavigationButtons") ? "d-none" : "")" type="button">Next</button>
        </div>
    </div>

@functions {
    public string Name { get; set; } = "Empty";

    public string OscReceiveAddress { get; set; }

    public string NextPageAddress { get; set; } = "/PageNext";

    public string PrevPageAddress { get; set; } = "/PagePrev";

    public void HandleKeyPress(UIKeyboardEventArgs ev)
    {
        Console.WriteLine(ev.Key, ev.ShiftKey);
    }

    private void PageChange(string address)
    {
        server.Send(address, 1);
    }

    public void OnMessageReceived(object sender, OscMessage msg)
    {
        if (msg.Address == "/page")
        {
            var name = (string)msg.Arg[0];
            if (string.IsNullOrWhiteSpace(name))
            {
                name = "Empty";
            }

            if (Name != name)
            {
                Name = name;
                base.Invoke(StateHasChanged);
            }
        }
    }

    protected override void OnInit()
    {
        server.OscMessageArrived += OnMessageReceived;
    }

    public void Dispose()
    {
        server.OscMessageArrived -= OnMessageReceived;
    }
}
